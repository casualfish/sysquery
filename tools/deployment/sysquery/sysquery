#!/bin/sh

SELF_DIR=$(dirname $0)
SELF_PWD=$(pwd)
SELF_ABS=${SELF_PWD}/${SELF_DIR}
source ${SELF_ABS}/conf/sysquery.conf
set -m

if [ -n "$LD_LIBRARY_PATH" ]; then
  LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SYSQUERY_DIR/lib
else
  LD_LIBRARY_PATH=/home/sysquery/lib
fi
export LD_LIBRARY_PATH
SYSQUERY_BIN=$SYSQUERY_DIR/bin/sysquery_6
HOST_NAME=$($SYSQUERY_BIN --json "select hostname from server_info;")
HOST_SN=$($SYSQUERY_BIN --json "select sn from server_info;")

cpu_monitor() {
  while true;do
    CPU_INFO=$($SYSQUERY_BIN --json "select * from cpu_info;")
    CPU_INFO="hostname=$HOST_NAME&host_sn=$HOST_SN&component_list={\"cpu\":$CPU_INFO}"
    curl --connect-timeout 10 -s $COLLECT_POST_URL -d "$CPU_INFO"
    sleep $CPU_MON_PERIOD
  done
}

hdd_monitor() {
  while true;do
    HDD_INFO=$($SYSQUERY_BIN --json "select * from block_devices;")
    HDD_INFO="hostname=$HOST_NAME&host_sn=$HOST_SN&component_list={\"hdd\":$HDD_INFO}"
    curl --connect-timeout 10 -s $COLLECT_POST_URL -d "$HDD_INFO"
    sleep $DISK_MON_PERIOD
  done
}

dimm_monitor() {
  while true;do
    DIMM_INFO=$($SYSQUERY_BIN --json "select * from dimm_info;")
    DIMM_INFO="hostname=$HOST_NAME&host_sn=$HOST_SN&component_list={\"dimm\":$DIMM_INFO}"
    curl --connect-timeout 10 -s $COLLECT_POST_URL -d "$DIMM_INFO"
    sleep $DIMM_MON_PERIOD
  done
}

server_monitor() {
  while true;do
    DIMM_INFO=$($SYSQUERY_BIN --json "select * from dimm_info;")
    HDD_INFO=$($SYSQUERY_BIN --json "select * from block_devices;")
    CPU_INFO=$($SYSQUERY_BIN --json "select * from cpu_info;")
    SERVER_INFO=$($SYSQUERY_BIN --json "select * from server_info;")
    ALL_INFO="hostConfig={\"cpu\":$CPU_INFO, \"hdd\":$HDD_INFO, \"dimm\":$DIMM_INFO, \"server\": $SERVER_INFO}"
    curl --connect-timeout 10 -s $COLLECT_POST_URL -d "$ALL_INFO"
    sleep $SERVER_MON_PERIOD
  done
}

start_all()
{
  if [ -f $SYSQUERY_DIR/all.pid ]; then
    echo "sysquery already running..."
    exit 1
  fi
  cpu_monitor & 
  echo $! > $SYSQUERY_DIR/all.pid
  hdd_monitor &
  echo $! >> $SYSQUERY_DIR/all.pid
  dimm_monitor &
  echo $! >> $SYSQUERY_DIR/all.pid
  server_monitor &
  echo $! >> $SYSQUERY_DIR/all.pid
}

stop_all()
{
  if [ ! -f $SYSQUERY_DIR/all.pid ]; then
    echo "sysquery already stopped"
    exit 1
  fi
  while read process; do
    kill -9 $process
  done < $SYSQUERY_DIR/all.pid
  rm -rf $SYSQUERY_DIR/all.pid
}

function main() {
  case "$1" in
    start)
      start_all
      return 0
      ;;
    stop)
      stop_all
      return 0
      ;;
    restart)
      stop_all
      start_all
      return 0
      ;;
    *)
      ;;
  esac
}

main "$@"
exit $?
